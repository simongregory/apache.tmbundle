<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU
# encoding: utf-8

SUPPORT = ENV['TM_SUPPORT_PATH']

require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/exit_codes'
require SUPPORT + '/lib/osx/plist'

def find_apache
    return [ ENV['TM_APACHE_DIRECTORY'].to_s,
             "/etc/apache2",
             "/private/etc/httpd" ].find { |path| File.directory? path }
end

#Search the path for any filename ending with .conf
def find_confs
    menu = []
    search_path = find_apache.to_s

    configs = `find -dE "#{search_path}" -maxdepth 7 -regex '.*\\.conf$' -print 2&gt;/dev/null`

    configs.each do |file|
      menu_item = { 'title' =&gt; File.basename(file), 'path' =&gt; file }
      menu.push(menu_item)
    end

    menu
end

items = find_confs()

TextMate.exit_show_tool_tip( "No .conf files found ") if items.empty?

plist = { 'menuItems' =&gt; items }.to_plist
res = OSX::PropertyList::load(`"$DIALOG" -up #{e_sh plist}`)

TextMate.exit_discard() unless res.has_key? 'selectedMenuItem'

`open -a TextMate #{res['selectedMenuItem']['path']}`</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>@C</string>
	<key>name</key>
	<string>Open Configâ€¦</string>
	<key>output</key>
	<string>discard</string>
	<key>scope</key>
	<string>source.apache-config</string>
	<key>uuid</key>
	<string>0BB34044-0A2C-4D11-A2DE-30107D622ECF</string>
</dict>
</plist>
